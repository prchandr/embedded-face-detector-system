#!/usr/bin/env bash
#
# Copyright (c) 1997-2021
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#

ARGCOUNT=4
OPTIONAL_ARGS=1

# Check if arg count is correct
if [ $# -ne $ARGCOUNT ] && [ $# -ne $(($ARGCOUNT + $OPTIONAL_ARGS)) ]
then
    echo "Error: Incorrect number of arguments. Expected: $ARGCOUNT, Recieved: $#"
    echo "Usage: ./runme_test classifiers_dir classifiers_file images_dir images_file classifier_results_file."
    exit 1 
fi

# Directories and files
CLASSIFIER_DIR=$1
CLASSIFIER_FILE=$2 
IMAGE_DIRECTORY=$3
OUTPUT_FILE=$4
CURRENT_DIRECTORY=$(pwd)
CLASSIFIER_RESULTS=${5-:""}

# Get number of images in the directory
cd $IMAGE_DIRECTORY
num_files=$(ls | wc -l)
cd $CURRENT_DIRECTORY

# Max files to classify. 
MAX_FILES=100

if [ $MAX_FILES -le $num_files ]
then
	echo "runme_test: Found $num_files images. Using only the first $MAX_FILES."
	num_files=$MAX_FILES
else
	echo "runme_test: Found $num_files images."
fi

# Create imageSelect.txt to include all images in directory
rm -f imageSelect.txt
for (( i = 1; i <= $num_files; i++ ))
do
	echo "$i" >> imageSelect.txt
done

./runme_generic $CLASSIFIER_DIR $CLASSIFIER_FILE $IMAGE_DIRECTORY imageSelect.txt $OUTPUT_FILE $CLASSIFIER_RESULTS


