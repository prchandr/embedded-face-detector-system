#!/usr/bin/env bash
#
# Copyright (c) 1997-2021
# Maryland DSPCAD Research Group, The University of Maryland at College Park 
#
# Permission is hereby granted, without written agreement and without
# license or royalty fees, to use, copy, modify, and distribute this
# software and its documentation for any purpose, provided that the above
# copyright notice and the following two paragraphs appear in all copies
# of this software.
# 
# IN NO EVENT SHALL THE UNIVERSITY OF MARYLAND BE LIABLE TO ANY PARTY
# FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF MARYLAND HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE UNIVERSITY OF MARYLAND SPECIFICALLY DISCLAIMS ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# MARYLAND HAS NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,
# ENHANCEMENTS, OR MODIFICATIONS.
#

# Script to run this test
# Usage: runme classifiers_dir classifiers_file images_dir images_file

# Variables
digits=0000
ARGCOUNT=5
OPTIONAL_ARGS=1

# Check if arg count is correct
if [ $# -ne $ARGCOUNT ] && [ $# -ne $(($ARGCOUNT + $OPTIONAL_ARGS)) ] 
then
    echo "Error: Incorrect number of arguments. Expected: $ARGCOUNT, Recieved: $#"
    echo "Usage: ./runme_generic classifiers_dir classifiers_file images_dir images_file [classifier_output]."
    exit 1 
fi

# Directories and files
CLASSIFIER_DIR=$1
CLASSIFIER_FILE=$2 
IMAGE_DIRECTORY=$3
IMAGE_FILE=$4
OUTPUT_FILE=$5
CLASSIFIER_RESULTS=${6:-""}
CURRENT_DIRECTORY=$(pwd)

# Run enee408mim2txt on each image file, if it doesn't exist
IMAGES=$(cat $IMAGE_FILE)
cd $IMAGE_DIRECTORY
for image in $IMAGES
do
    filename=${digits:${#image}:${#digits}}${image}
    if [ ! -f "${filename}.txt" ] 
    then
        command="enee408mim2txt ${filename}.png grayscale"
        eval $command
    fi
done
cd $CURRENT_DIRECTORY

# Delete results file, if it exists
rm -f $OUTPUT_FILE
rm -f $CLASSIFIER_RESULTS

# Call driver program
./../test/util/efds_graph_driver.exe $CLASSIFIER_DIR $CLASSIFIER_FILE $IMAGE_DIRECTORY $IMAGE_FILE $OUTPUT_FILE $CLASSIFIER_RESULTS